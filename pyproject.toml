[project]
requires-python = ">=3.9"

name = "graph2mat"
version = "0.0.6"
description = "Utility package to work with equivariant matrices and graphs."
readme = "README.md"
license = {text = "MIT"}
keywords = [
    "machine learning",
    "equivariance",
    "e3nn",
    "matrix",
]

authors = [
    {name = "Pol Febrer", email = "pfebrer96@gmail.com"},
    {name = "Peter B. JÃ¸rgensen", email = "peterbjorgensen@gmail.com"}
]

dependencies = [
    "numpy",
    "scipy",
    "ase",
    "sisl>=0.14.0",
    "typer",
]

classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]

[project.scripts]
graph2mat = "graph2mat.tools.cli.cli:app"

[build-system]
requires = [
    "setuptools_scm[toml]>=6.2",
    "scikit-build-core[pyproject]>=0.8",
    "cython>=3",
    "numpy>=2.0.0"
]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
# Consider adding
# minimum-version to choose the fallback mechanism in scikit-build-core
wheel.packages = ["src/graph2mat"]

[project.optional-dependencies]
server = [
    "pyyaml",
    "fastapi",
    "uvicorn",
    "jinja2"
]

analysis = [
    "plotly",
    "pandas"
]

lightning = [
    "pytorch-lightning",
    "jsonargparse[signatures]"
]

siesta = [
    "jinja2"
]

torch = [
    "torch",
    "torch_geometric"
]

e3nn = [
    "torch",
    "torch_geometric",
    "e3nn"
]

mace = [
    "torch",
    "torch_geometric",
    "mace_torch"
]

tools = [
    "pyyaml",
    "fastapi",
    "uvicorn",
    "plotly",
    "pandas",
    "pytorch-lightning",
    "jsonargparse[signatures]",
    "jinja2",
    "mace_torch"
]

docs = [
    "pyyaml",
    "fastapi",
    "uvicorn",
    "plotly",
    "pandas",
    "pytorch-lightning",
    "jsonargparse[signatures]",
    "jinja2",
    "sphinx",
    "sphinx_autodoc_typehints",
    "sphinx_rtd_theme",
    "nbsphinx",
    "ipykernel",
    "e3nn",
    "torch",
    "mace_torch",
    "torch_geometric"
]

test = [
    "pytest",
    "pyyaml",
    "plotly",
    "pandas",
    "pytorch-lightning",
    "e3nn",
    "torch",
    "mace_torch",
    "torch_geometric",
    "jsonargparse[signatures]",
    "jinja2"
]

#"fastapi", "uvicorn"

[tool.cibuildwheel]
build-verbosity = 3
skip = [
    "pp*",
    "*i686",
    "*musllinux*",
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
